@import './GlobalVariables.scss';
@import './GlobalAnimations.scss';

.projects {
    display: flex;
    flex-direction: column;
    gap: 10em;

    .project-item {

        .links {
            width: 100%;
            display: flex;
            flex-direction: row;
            justify-content: center;
            align-items: center;

            gap: 12px;

            .link-button {
                color: $fontColorDark;
                background-color: $buttonColor;
                text-decoration: none;
                font-weight: 400;
            
                border-radius: 8px;
                padding: 4px 12px;
                transition: 200ms;
                filter: drop-shadow(0 6px 0 $buttonShadowColor) brightness(100%);
                transform: translateY(-2px);
            
                &:hover {
                    filter: drop-shadow(0 4px 0 $buttonShadowColor) brightness(110%);
                    transform: translateY(0);
                }
            
                &:focus {
                    filter: drop-shadow(0 0px 0 $buttonShadowColor) brightness(90%);
                    transform: translateY(4px);
                }
            
                &:disabled {
                    filter: drop-shadow(0 4px 0 $buttonShadowColor) brightness(100%) saturate(0%);
                    transform: translateY(0px);
                }
            }
        }

        
    }
}

@media(prefers-color-scheme: light) {
    .projects {
        .project-item {
            .media {
                border-color: $primaryBorderColorLight;
                filter: drop-shadow(var(--shadowX) var(--shadowY) 12px $lightShadow);
            }
            .info {
                background: rgba($color: $foregroundColorLight, $alpha: calc(var(--visibility) * 0.5));
                border-color: $primaryBorderColorLight;
            }
        }
    }   
}

@media(prefers-color-scheme: dark) {
    .projects {
        .project-item {
            .media {
                border-color: $primaryBorderColorDark;
                filter: drop-shadow(var(--shadowX) var(--shadowY) 12px $darkShadow);
            }
            .info {
                background: rgba($color: $foregroundColorDark, $alpha: calc(var(--visibility) * 0.5));
                border-color: $primaryBorderColorDark;
            }
        }
    }
}

@media only screen and (min-width: $mobileScreenWidth) {
    .projects {
        display: flex;
        flex-direction: column;
        gap: 10em;
    
        .project-item {
            position: relative;
            height: calc(100vh / 2);
    
            display: flex;
            flex-direction: row-reverse;
            justify-content: flex-start;
            align-items: flex-start;
            
            gap: 2em;

            --visibility: 0;
    
            .info {
                height: 100%;
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
    
                flex-shrink: 1;
                width: fit-content;
    
                h2 {
                    opacity: var(--visibility);
                    transform: translateY(calc((1 - var(--visibility)) * -10vh));
                }
    
                p {
                    text-align: justify;
                    font-weight: 200;
                    width: 100%;
                    max-width: 500px;
                    padding: 12px;
                    opacity: var(--visibility);
                }
            }
    
            &.visible {
                
    
                &:nth-child(odd) {
                    .media {
                        transform: translateX(0);
                    }
                }
        
                &:nth-child(even) {
                    .media {
                        transform: translateX(0);
        
                    }
                }
            }
    
            .media {
                flex: 1;
                position: relative;
                height: 100%;
    
                border: 2px solid transparent;
                border-radius: 24px;
    
                --mouseX: 0.0;
                --mouseY: 0.0;
                
                --shadowX: calc(var(--mouseX) * -12px);
                --shadowY: calc(var(--mouseY) * -12px);
    
                --rotateX: calc(var(--mouseY) * 8deg);
                --rotateY: calc(var(--mouseX) * 8deg);
                
                --lightAngle: 90deg;
                --lightColor: rgba(255, 255, 255, 0.2);
                
                transition: transform 0ms linear;
    
                opacity: var(--visibility);
    
                &::after {
                    content: '';
                    filter: none;
                    opacity: 0;
                    width: 100%;
                    height: 100%;
                    left: 0;
                    position: absolute;
    
                    border-radius: 24px;
    
                    transition: opacity 400ms ease-in-out;
    
                    mix-blend-mode: screen;
                    background: linear-gradient(var(--lightAngle), var(--lightColor) -10%, rgba(255,255,255,0) 80%);
                }
    
                &:hover {
                    transition: transform 0ms linear;
                    &::after {
                        opacity: 1;
                    }
    
                    .background-img {
                        opacity: 0;
                    }
            
                    .background-gif {
                        opacity: 1;
                    }
                }
    
                .background-img {
                    position: absolute;
                    opacity: 1;
                    height: 100%;
                    border-radius: 24px;
    
                    transition: opacity 600ms ease-in-out;
                }
        
                .background-gif {
                    opacity: 0;
                    height: 100%;
                    border-radius: 24px;
    
                    transition: opacity 600ms ease-in-out;
                }
            }
    
            &:nth-child(odd) {
                justify-content: flex-start;
                flex-direction: row;
    
                .info {
                    h2 {
                        
                    }
                }
    
                .media {
                    transform-origin: center;
                    transform: translateX(calc((1 - var(--visibility)) * -50%)) rotateX(var(--rotateX)) rotateY(var(--rotateY));
                }
            }
    
            &:nth-child(even) {
                .media {
                    transform-origin: center;
                    transform: translateX(calc((1 - var(--visibility)) * 50%)) rotateX(var(--rotateX)) rotateY(var(--rotateY));
                }
            }
        }
    }
}
@media only screen and (max-width: $mobileScreenWidth) {
    .projects {
        gap: 5em;
        .project-item {
            position: relative;
            width: 90vw;
            height: 60vh;
            overflow: hidden;
            
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;

            padding: 24px;
            border-radius: 24px;

            --visibility: 0;
    
            .info {
                display: flex;
                flex-direction: column;
                justify-content: center;
                align-items: center;
                flex-shrink: 1;
                gap: 24px;

                padding: 16px;
                transform: scale(min(calc(var(--visibility) * 100% + 50%), 100%));
                backdrop-filter: blur(calc(var(--visibility) * 10px));
                border: 2px solid transparent;
                border-radius: 24px;
    
                h2 {
                    align-self: flex-start;
                }
    
                p {
                    text-align: left;
                    font-weight: 200;
                    width: 100%;
                    opacity: var(--visibility);
                }
            }
    
    
            .media {
                position: absolute;
                width: 100%;
    
                border: 2px solid transparent;
                border-radius: 24px;
                
                transform-origin: center;

                .background-img {
                    opacity: 1;
                    width: 120%;

                    transform: translateX(-10%) translateY(calc(((1 - var(--visibility)) * 5%)));
                }
        
                .background-gif {
                    display: none;
                }
            }

            .links {
                gap: 8px;
    
                .link-button {
                    font-size: 16px;
                }
            }
        }
    }
}